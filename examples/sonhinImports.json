{
  "hooks.server": ["private", "seedPresets"],
  "reinsert": ["remotion"],
  "removeByValue.test": ["removeByValue"],
  "removeByValue": ["remotion"],
  "separateArray.test": ["separateArray"],
  "addCommand": ["commandData", "projectModel"],
  "commandSchema": ["commandData", "required"],
  "crossoverLists.test": ["mockMathRandom", "crossoverLists"],
  "getSelectedIndex.test": ["mockMathRandom", "times", "getSelectedIndex"],
  "getDenormalizedControlValue.test": [
    "controlData",
    "getDenormalizedControlValue"
  ],
  "getDenormalizedControlValue": ["controlData", "withTension"],
  "getNormalizedControlValue.test": [
    "controlData",
    "getNormalizedControlValue"
  ],
  "getNormalizedControlValue": ["controlData", "withoutTension"],
  "mutateEffectData": [
    "effectData",
    "effectClasses",
    "clamp",
    "getDenormalizedControlValue",
    "getNormalizedControlValue"
  ],
  "crossoverInstrumentPresets": ["instrumentPreset", "crossoverLists"],
  "generateInstrumentPresets": [
    "newId",
    "crossoverInstrumentPresets",
    "mutateInstrumentPreset",
    "selectInstrumentPresets"
  ],
  "mutateInstrumentPreset": ["instrumentPreset", "mutateEffectData"],
  "selectInstrumentPresets": [
    "presetModel",
    "instrumentPreset",
    "times",
    "getSelectedIndex"
  ],
  "crossoverPatternPresets": ["patternPreset", "crossoverLists"],
  "generatePatternPresets": [
    "newId",
    "crossoverPatternPresets",
    "mutatePatternPreset",
    "selectPatternPresets"
  ],
  "mutatePatternPreset": ["patternPreset", "mutateEffectData"],
  "selectPatternPresets": [
    "presetModel",
    "patternPreset",
    "times",
    "getSelectedIndex"
  ],
  "crossoverTrackPresets": ["trackPreset", "crossoverLists"],
  "generateTrackPresets": [
    "newId",
    "crossoverTrackPresets",
    "mutateTrackPreset",
    "selectTrackPresets"
  ],
  "mutateTrackPreset": ["trackPreset", "mutateEffectData"],
  "selectTrackPresets": [
    "presetModel",
    "trackPreset",
    "times",
    "getSelectedIndex"
  ],
  "addLike": ["newId", "presetModel", "likeFitnessValue", "likeModel"],
  "getLikedIds": ["likeModel"],
  "likeModel": ["likeSchema"],
  "likeSchema": ["required", "like"],
  "removeLike": ["presetModel", "likeFitnessValue", "likeModel"],
  "getPresetById": ["preset", "presetModel"],
  "getPresets": ["preset", "presetModel", "removeUndefinedValues"],
  "presetModel": ["presetSchema"],
  "presetSchema": ["preset", "required"],
  "savePreset": ["preset", "presetModel"],
  "removeUndefinedValues.test": ["removeUndefinedValues"],
  "createProject": [
    "newId",
    "generateName",
    "trackPreset",
    "project",
    "projectModel"
  ],
  "deleteProject": ["kit", "projectModel"],
  "getAllProjects": ["project", "projectModel"],
  "getProject": ["project", "projectModel"],
  "getUserProjects": ["project", "projectModel"],
  "project": ["commandData", "trackPreset"],
  "projectModel": ["projectSchema"],
  "projectSchema": ["commandSchema", "required", "project"],
  "renameProject": ["projectModel"],
  "seedPresets": ["presetModel", "presets.json"],
  "addStream": ["stream", "streamModel"],
  "streamModel": ["streamSchema"],
  "streamSchema": ["required", "stream"],
  "createGuestUser": ["newId", "user", "userModel"],
  "createJwt": ["private"],
  "getGoogleUserData": ["public"],
  "getUserByToken": ["private", "user", "kit", "userModel"],
  "getUserId": ["private", "kit"],
  "setAuthorizationCookie": ["kit", "createJwt"],
  "signIn": ["newId", "getGoogleUserData", "userModel"],
  "userModel": ["userSchema"],
  "userSchema": ["user", "required"],
  "command": ["newId", "trackData", "commandData"],
  "commandClasses": [
    "addClip",
    "removeClip",
    "executeCommands",
    "redo",
    "undo",
    "addEffect",
    "moveEffect",
    "removeEffect",
    "updateEffect",
    "addInstrument",
    "removeInstrument",
    "renameInstrument",
    "setChannelOfInstrument",
    "setInstrumentVolume",
    "setMasterVolume",
    "addPattern",
    "removePattern",
    "renamePattern",
    "setChannelOfPattern",
    "setPatternIsMuted",
    "setPatternIsSoloed",
    "addSection",
    "removeSection",
    "addSound",
    "removeSound"
  ],
  "createCommand.test": ["sectionData", "createCommand", "addSection"],
  "createCommand": ["command", "commandClasses", "commandData"],
  "createTrackData": ["trackData", "blankTrackData"],
  "editor": [
    "trackData",
    "command",
    "commandData",
    "redo",
    "undo",
    "isEditorCommand",
    "isHistoryCommand"
  ],
  "isEditorCommand": ["command", "editorCommand"],
  "isHistoryCommand": ["editorCommand"],
  "addClip.test": ["sectionData", "createTrackData", "addClip"],
  "addClip": ["removeByValue", "command", "trackData"],
  "removeClip.test": ["sectionData", "createTrackData", "removeClip"],
  "removeClip": [
    "reinsert",
    "remotion",
    "removeByValue",
    "command",
    "trackData"
  ],
  "editorCommand": ["command", "editor"],
  "executeCommands": ["command", "commandData", "editor", "editorCommand"],
  "redo.test": ["blankTrackData", "editor", "getEffectIds", "mockAddEffect"],
  "redo": ["editor", "editorCommand"],
  "undo.test": ["editor", "getEffectIds", "mockAddEffect", "blankTrackData"],
  "undo": ["editor", "isEditorCommand", "editorCommand"],
  "getEffectIds": ["editor"],
  "mockAddEffect": ["effectData", "trackData", "command"],
  "addEffect.test": [
    "effectData",
    "sectionData",
    "createTrackData",
    "addEffect"
  ],
  "addEffect": [
    "removeByValue",
    "command",
    "effectData",
    "trackData",
    "getEffectParent"
  ],
  "getEffectParent": ["trackData"],
  "moveEffect.test": [
    "effectData",
    "patternData",
    "createTrackData",
    "moveEffect"
  ],
  "moveEffect": ["command", "moveId", "trackData", "getEffectParent"],
  "removeEffect.test": [
    "effectData",
    "patternData",
    "createTrackData",
    "removeEffect"
  ],
  "removeEffect": [
    "reinsert",
    "remotion",
    "removeByValue",
    "command",
    "effectData",
    "trackData",
    "getEffectParent"
  ],
  "updateEffect.test": ["effectData", "createTrackData", "updateEffect"],
  "updateEffect": ["command", "trackData"],
  "addInstrument.test": [
    "instrumentMapping",
    "createTrackData",
    "addInstrument"
  ],
  "addInstrument": [
    "command",
    "insertItemsById",
    "removeItemsById",
    "instrumentMapping",
    "trackData"
  ],
  "removeInstrument.test": [
    "instrumentData",
    "createTrackData",
    "removeInstrument"
  ],
  "removeInstrument": ["command", "instrumentData", "trackData"],
  "renameInstrument.test": [
    "instrumentData",
    "createTrackData",
    "renameInstrument"
  ],
  "renameInstrument": ["command", "trackData"],
  "setChannelOfInstrument.test": [
    "instrumentData",
    "createTrackData",
    "setChannelOfInstrument"
  ],
  "setChannelOfInstrument": ["command", "trackData"],
  "setInstrumentVolume.test": [
    "instrumentData",
    "createTrackData",
    "setInstrumentVolume"
  ],
  "setInstrumentVolume": ["command", "trackData"],
  "setMasterVolume.test": ["masterData", "createTrackData", "setMasterVolume"],
  "setMasterVolume": ["command", "trackData"],
  "addPattern.test": ["patternMapping", "createTrackData", "addPattern"],
  "addPattern": [
    "command",
    "insertItemsById",
    "removeItemsById",
    "patternMapping",
    "trackData"
  ],
  "removePattern.test": ["patternData", "createTrackData", "removePattern"],
  "removePattern": ["command", "patternData", "trackData"],
  "renamePattern.test": ["patternData", "createTrackData", "renamePattern"],
  "renamePattern": ["command", "trackData"],
  "setChannelOfPattern.test": [
    "patternData",
    "createTrackData",
    "setChannelOfPattern"
  ],
  "setChannelOfPattern": ["command", "trackData"],
  "setPatternIsMuted.test": [
    "patternData",
    "createTrackData",
    "setPatternIsMuted"
  ],
  "setPatternIsMuted": ["command", "trackData"],
  "setPatternIsSoloed.test": [
    "patternData",
    "createTrackData",
    "setPatternIsSoloed"
  ],
  "setPatternIsSoloed": ["command", "trackData"],
  "addSection.test": ["sectionData", "createTrackData", "addSection"],
  "addSection": ["removeByValue", "command", "sectionData", "trackData"],
  "removeSection.test": ["sectionData", "createTrackData", "removeSection"],
  "removeSection": [
    "reinsert",
    "remotion",
    "removeByValue",
    "sectionData",
    "trackData",
    "command"
  ],
  "addSound.test": [
    "instrumentData",
    "soundData",
    "createTrackData",
    "addSound"
  ],
  "addSound": ["removeByValue", "command", "soundData", "trackData"],
  "removeSound.test": [
    "instrumentData",
    "soundData",
    "createTrackData",
    "removeSound"
  ],
  "removeSound": ["command", "soundData", "trackData", "removeInArray"],
  "getItemsById.test": ["getItemsById", "item"],
  "getItemsById": ["insertItemsById", "item"],
  "getSingle.test": ["getSingle"],
  "insertItemsById.test": ["insertItemsById"],
  "insertItemsById": ["item"],
  "mapping": ["item"],
  "move.test": ["move"],
  "moveId.test": ["moveId"],
  "moveId": ["move"],
  "removeItemsById.test": ["removeItemsById"],
  "removeItemsById": ["item"],
  "scale.test": ["note", "scale"],
  "scale": ["diatonicToChromatic", "note"],
  "ensureNoPrimerNodes.test": ["ensureNoPrimerNodes"],
  "getNodeData": ["isControlNode", "nodeData"],
  "getTreeNodes.test": ["getTreeNodes"],
  "graph": [
    "ensureNoPrimerNodes",
    "getNodeData",
    "getTreeNodes",
    "graphData",
    "optimizeNodeTree"
  ],
  "graphData": ["nodeData"],
  "indexNodeTree.test": ["indexNodeTree"],
  "indexNodeTree": ["resetNodeTreeIndexes"],
  "isNodeEquivalent.test": ["isNodeEquivalent"],
  "isNodeEquivalent": ["isControlNode"],
  "optimizeNodeTree.test": ["optimizeNodeTree"],
  "optimizeNodeTree": [
    "byIndex",
    "getTreeNodes",
    "indexNodeTree",
    "isNodeEquivalent",
    "replaceNodeUsage"
  ],
  "replaceNodeUsage.test": ["replaceNodeUsage"],
  "instrument": [
    "instrumentData",
    "getEffects",
    "effect",
    "isDefined",
    "sound",
    "synth"
  ],
  "sound": ["soundData", "getEffects", "effect"],
  "sumNodes.test": ["sumNodes"],
  "synth": [
    "hashToU32",
    "side",
    "graphStage",
    "graph",
    "instrument",
    "synthData",
    "tone"
  ],
  "synthData": ["graphData"],
  "tone": ["toneGraphStage", "graph", "sound", "sumNodes"],
  "clip": ["note", "pattern"],
  "devProgression": ["progression"],
  "ensemble": [
    "isDefined",
    "ensembleData",
    "note",
    "scale",
    "clip",
    "pattern",
    "section"
  ],
  "pattern": ["getEffects", "effect", "patternData", "note", "devProgression"],
  "section": [
    "getEffects",
    "effect",
    "isDefined",
    "sectionData",
    "patternDuration",
    "clip",
    "pattern"
  ],
  "track": [
    "createEffect",
    "effect",
    "isDefined",
    "master",
    "trackData",
    "instrument",
    "sound",
    "note",
    "clip",
    "ensemble",
    "pattern",
    "section"
  ],
  "trackData": [
    "effectData",
    "ensembleData",
    "instrumentData",
    "masterData",
    "patternData",
    "sectionData",
    "soundData"
  ],
  "ensembleMapping": ["effectData", "ensembleData", "sectionData"],
  "instrumentMapping": ["effectData", "instrumentData", "soundData"],
  "patternMapping": ["effectData", "patternData"],
  "sectionMapping": ["effectData", "sectionData"],
  "soundMapping": ["effectData", "soundData"],
  "trackMapping": [
    "effectData",
    "ensembleData",
    "instrumentData",
    "masterData",
    "patternData",
    "sectionData",
    "soundData"
  ],
  "effect": ["effectData", "controlData", "effectsParent"],
  "effectDetails": ["controlsData"],
  "effectsParent": ["effect"],
  "control": ["hashToU32", "effect", "controlData"],
  "controlsData": ["controlData"],
  "getTicket": ["hashToU32"],
  "newControl": ["controlData"],
  "createEffect.test": ["effectsParent", "overdrive", "createEffect"],
  "createEffect": ["effectData", "effect", "effectClasses"],
  "effectClasses": [
    "graphEffectClasses",
    "notesEffectClasses",
    "effectConstructor"
  ],
  "effectConstructor": ["effectData", "controlData", "effect"],
  "getEffectDataFromDefaults.test": ["effectData", "getEffectDataFromDefaults"],
  "getEffectDataFromDefaults": ["newId", "effectData", "effectClasses"],
  "getEffects": ["isDefined", "effect"],
  "getControlNodes": ["getTicket", "effect"],
  "graphEffect": ["graphStage", "effect"],
  "graphEffectClasses": [
    "commonGraphEffectClasses",
    "masterGraphEffectClasses",
    "synthGraphEffectClasses",
    "soundEffectClasses",
    "toneGraphEffectClasses"
  ],
  "commonGraphEffectClasses": [
    "overdrive",
    "reduceResolution",
    "reduceSampleRate",
    "saturation",
    "amplitudeOscillation",
    "compress",
    "limiter",
    "volume",
    "cutInfrasound",
    "highPass",
    "lowPass",
    "peaking"
  ],
  "overdrive": ["newControl", "getControlNodes", "graphEffect", "graphStage"],
  "reduceResolution": [
    "newControl",
    "getControlNodes",
    "graphEffect",
    "graphStage"
  ],
  "reduceSampleRate": [
    "newControl",
    "getControlNodes",
    "graphEffect",
    "graphStage"
  ],
  "saturation": ["newControl", "getControlNodes", "graphEffect", "graphStage"],
  "amplitudeOscillation": [
    "newControl",
    "getControlNodes",
    "graphEffect",
    "graphStage"
  ],
  "compress": ["newControl", "getControlNodes", "graphEffect", "graphStage"],
  "limiter": ["newControl", "getControlNodes", "graphEffect", "graphStage"],
  "volume": ["newControl", "getControlNodes", "graphEffect", "graphStage"],
  "cutInfrasound": ["graphEffect", "graphStage", "constantTicket"],
  "highPass": ["newControl", "getControlNodes", "graphEffect", "graphStage"],
  "lowPass": ["newControl", "getControlNodes", "graphEffect", "graphStage"],
  "peaking": ["newControl", "getControlNodes", "graphEffect", "graphStage"],
  "masterGraphEffectClasses": ["sideChain"],
  "masterGraphStage": ["graphStage"],
  "sideChain": [
    "separateArray",
    "sumNodes",
    "newControl",
    "graphEffect",
    "hashToU32",
    "getControlNodes",
    "masterGraphStage"
  ],
  "synthGraphEffectClasses": ["reverb"],
  "reverb": ["newControl", "graphEffect", "graphStage", "getControlNodes"],
  "toneGraphEffectClasses": [
    "amplitudeEnvelope",
    "filterSlide",
    "velocityAmplitude",
    "frequencyOscillation",
    "glide",
    "pitchSlide"
  ],
  "toneGraphStage": ["graphStage"],
  "amplitudeEnvelope": [
    "newControl",
    "getControlNodes",
    "graphEffect",
    "graphStage"
  ],
  "filterSlide": ["newControl", "getControlNodes", "graphEffect", "graphStage"],
  "velocityAmplitude": ["graphEffect", "graphStage"],
  "frequencyOscillation": [
    "newControl",
    "getControlNodes",
    "graphEffect",
    "toneGraphStage"
  ],
  "glide": ["newControl", "getControlNodes", "graphEffect", "toneGraphStage"],
  "pitchSlide": [
    "newControl",
    "graphEffect",
    "getControlNodes",
    "toneGraphStage"
  ],
  "soundEffectClasses": [
    "cyclicPerlinNoise",
    "perlinNoise",
    "poppingNoise",
    "whiteNoise",
    "pulse",
    "sawtooth",
    "sine",
    "square",
    "triangle"
  ],
  "cyclicPerlinNoise": [
    "newControl",
    "getControlNodes",
    "graphEffect",
    "toneGraphStage"
  ],
  "perlinNoise": [
    "newControl",
    "getControlNodes",
    "graphEffect",
    "toneGraphStage"
  ],
  "poppingNoise": [
    "newControl",
    "getControlNodes",
    "graphEffect",
    "toneGraphStage"
  ],
  "whiteNoise": ["graphEffect", "toneGraphStage"],
  "pulse": ["newControl", "getControlNodes", "graphEffect", "toneGraphStage"],
  "sawtooth": ["graphEffect", "toneGraphStage"],
  "sine": ["graphEffect", "toneGraphStage"],
  "square": ["graphEffect", "toneGraphStage"],
  "triangle": ["graphEffect", "toneGraphStage"],
  "fromDetails": ["effectConstructor", "effectDetails"],
  "notesEffect": ["note", "effect", "progression"],
  "notesEffectClasses": [
    "effectConstructor",
    "arpeggio",
    "chords",
    "copyFirstHalf",
    "division",
    "joinByPitch",
    "octave",
    "randomPitch",
    "rootNotes",
    "roundPitch",
    "anticipateNotes",
    "setDuration",
    "shiftOneBar",
    "staccato",
    "strum",
    "swing",
    "tempo",
    "crescendo",
    "dynamic",
    "randomVelocity"
  ],
  "arpeggio.test": [
    "note",
    "fromDetails",
    "notesEffect",
    "progression",
    "arpeggio"
  ],
  "arpeggio": [
    "newId",
    "note",
    "newControl",
    "times",
    "notesEffect",
    "getChord",
    "replaceArray"
  ],
  "chords.test": [
    "note",
    "fromDetails",
    "notesEffect",
    "progression",
    "chords"
  ],
  "chords": ["newId", "note", "notesEffect", "getChord", "replaceArray"],
  "copyFirstHalf.test": ["note", "fromDetails", "notesEffect", "copyFirstHalf"],
  "copyFirstHalf": ["newId", "patternDuration", "notesEffect"],
  "division.test": ["note", "fromDetails", "notesEffect", "division"],
  "division": [
    "newId",
    "note",
    "patternDuration",
    "newControl",
    "times",
    "notesEffect"
  ],
  "getChord": ["note", "progression"],
  "joinByPitch.test": ["note", "fromDetails", "notesEffect", "joinByPitch"],
  "joinByPitch": ["note", "notesEffect", "byStart", "setArrayContent"],
  "octave.test": ["note", "fromDetails", "notesEffect", "octave"],
  "octave": ["newControl", "diatonicOctave", "notesEffect"],
  "randomPitch.test": ["note", "fromDetails", "notesEffect", "randomPitch"],
  "randomPitch": ["newControl", "random", "notesEffect"],
  "rootNotes.test": [
    "note",
    "fromDetails",
    "notesEffect",
    "progression",
    "rootNotes"
  ],
  "rootNotes": ["getChord", "notesEffect"],
  "roundPitch.test": ["note", "fromDetails", "notesEffect", "roundPitch"],
  "roundPitch": ["notesEffect"],
  "anticipateNotes": ["newControl", "notesEffect"],
  "setDuration.test": ["note", "fromDetails", "setDuration", "notesEffect"],
  "setDuration": ["newControl", "notesEffect"],
  "shiftOneBar.test": ["note", "fromDetails", "notesEffect", "shiftOneBar"],
  "shiftOneBar": ["notesEffect"],
  "staccato.test": ["note", "fromDetails", "staccato", "notesEffect"],
  "staccato": ["newControl", "notesEffect"],
  "strum.test": ["note", "fromDetails", "strum", "notesEffect"],
  "strum": ["newControl", "notesEffect", "getChords"],
  "swing.test": ["note", "fromDetails", "notesEffect", "swing"],
  "swing": ["newControl", "notesEffect", "addSwing"],
  "tempo.test": ["note", "fromDetails", "notesEffect", "tempo"],
  "tempo": ["newControl", "notesEffect"],
  "addSwing.test": ["addSwing"],
  "chord": ["note"],
  "getChords.test": ["note", "getChords"],
  "getChords": ["note", "byStart", "chord"],
  "linearInterpolate.test": ["linearInterpolate"],
  "setArrayContent.test": ["setArrayContent"],
  "crescendo.test": ["note", "fromDetails", "notesEffect", "crescendo"],
  "crescendo": ["newControl", "notesEffect", "linearInterpolate"],
  "dynamic.test": ["note", "fromDetails", "notesEffect", "dynamic"],
  "dynamic": ["newControl", "notesEffect"],
  "randomVelocity.test": [
    "note",
    "fromDetails",
    "notesEffect",
    "randomVelocity"
  ],
  "randomVelocity": ["newControl", "random", "notesEffect"],
  "enhanceEffect": [
    "effectData",
    "trackData",
    "getEffectActions",
    "evaluator",
    "getMaxScoreIndex",
    "getScores"
  ],
  "enhanceSound": [
    "soundData",
    "trackData",
    "getEffectActions",
    "getSoundActions",
    "evaluator",
    "getMaxScoreIndex",
    "getScores"
  ],
  "getControlAction": ["command", "updateEffect", "effectData", "controlData"],
  "getEffectActions": [
    "command",
    "effectData",
    "effectClasses",
    "isDefined",
    "getControlAction"
  ],
  "getSoundActions": ["command", "removeEffect", "soundData"],
  "createEvaluator.test": ["createEvaluator"],
  "createEvaluator": ["tfjs", "evaluator"],
  "evaluator": ["tfjs"],
  "getEmbeddingSize": ["tfjs", "evaluator"],
  "getMaxScoreIndex.test": ["tfjs", "getMaxScoreIndex"],
  "getMaxScoreIndex": ["tfjs"],
  "getScores": [
    "trackData",
    "tfjs",
    "padArraysToSameSize",
    "getEmbeddings",
    "evaluator",
    "getEmbeddingSize",
    "getTrackTokens",
    "trackVocabulary"
  ],
  "padArraysToSameSize.test": ["padArraysToSameSize"],
  "padArraysToSameSize": ["fillArray"],
  "getEffectClearData": ["effectData", "effectClasses", "effectClearData"],
  "getEffectsClearData": ["trackData", "getEffectClearData"],
  "getEnsembleClearData": ["trackData", "ensembleClearData"],
  "getInstrumentClearData": [
    "instrumentData",
    "trackData",
    "getEffectsClearData",
    "getSoundClearData",
    "instrumentClearData"
  ],
  "getPatternClearData": [
    "patternData",
    "trackData",
    "getEffectsClearData",
    "patternClearData"
  ],
  "getSectionClearData": [
    "sectionData",
    "trackData",
    "getEffectsClearData",
    "sectionClearData"
  ],
  "getSoundClearData": [
    "soundData",
    "trackData",
    "getEffectClearData",
    "soundClearData"
  ],
  "getTrackClearData": [
    "trackData",
    "getEnsembleClearData",
    "getInstrumentClearData",
    "getPatternClearData",
    "getSectionClearData",
    "trackClearData"
  ],
  "instrumentClearData": ["effectClearData", "soundClearData"],
  "patternClearData": ["effectClearData"],
  "sectionClearData": ["effectClearData"],
  "soundClearData": ["effectClearData"],
  "trackClearData": [
    "ensembleClearData",
    "instrumentClearData",
    "patternClearData",
    "sectionClearData"
  ],
  "encodeIndexes.test": ["tfjs", "encodeIndexes"],
  "getEmbeddings.test": ["getEmbeddings", "vocabulary"],
  "getEmbeddings": [
    "tfjs",
    "token",
    "getIsNumberEmbeddings",
    "getNumberEmbeddings",
    "getStringEmbeddings",
    "vocabulary"
  ],
  "getIsNumberEmbeddings.test": ["token", "getIsNumberEmbeddings"],
  "getIsNumberEmbeddings": ["tfjs", "token"],
  "getNumberEmbeddings.test": ["token", "getNumberEmbeddings"],
  "getNumberEmbeddings": ["tfjs", "token"],
  "getStringEmbeddings.test": ["token", "getStringEmbeddings", "vocabulary"],
  "getStringEmbeddings": ["tfjs", "token", "encodeIndexes", "vocabulary"],
  "effectTerms": ["effectClasses", "getUniqueStrings"],
  "getObjectTokens.test": ["getObjectTokens"],
  "getObjectTokens": ["token"],
  "getTrackTokens": [
    "trackData",
    "getTrackClearData",
    "getObjectTokens",
    "token"
  ],
  "getUniqueStrings.test": ["getUniqueStrings"],
  "trackTerms": [
    "channels",
    "elementsTerms",
    "effectTerms",
    "ensembleTerms",
    "patternTerms",
    "sectionTerms"
  ],
  "trackVocabulary": ["getVocabulary", "trackTerms"],
  "sectionTerms": ["sectionNatures"],
  "createEvaluatorTrainer.test": ["createEvaluator", "createEvaluatorTrainer"],
  "createEvaluatorTrainer": ["tfjs", "evaluator", "getEmbeddingSize"],
  "createProjectsMatchIterator.test": [
    "project",
    "addSection",
    "blankTrackPreset",
    "tfjs",
    "createProjectsMatchIterator"
  ],
  "createProjectsMatchIterator": [
    "project",
    "times",
    "tfjs",
    "padArraysToSameSize",
    "getEmbeddings",
    "getTrackTokens",
    "trackVocabulary",
    "createTimelinesMatch",
    "getProjectTimeline"
  ],
  "createRandomMatch.test": ["createRandomMatch", "timeline"],
  "createRandomMatch": ["match", "timeline"],
  "createTimelinesMatch": [
    "createRandomMatch",
    "match",
    "timeline",
    "weightedRandom"
  ],
  "getMatchContainer": [
    "tfjs",
    "getTrackEmbeddings",
    "match",
    "matchContainer"
  ],
  "getProjectTimeline.test": [
    "addSection",
    "sectionData",
    "blankProject",
    "getProjectTimeline"
  ],
  "getProjectTimeline": [
    "project",
    "createCommand",
    "editor",
    "getTrackData",
    "timeline"
  ],
  "getTrackEmbeddings": [
    "trackData",
    "getEmbeddings",
    "getTrackTokens",
    "trackVocabulary"
  ],
  "match": ["trackData"],
  "matchContainer": ["tfjs"],
  "timeline": ["trackData"],
  "trainEvaluator": [
    "getAllProjects",
    "tfjs",
    "createEvaluator",
    "connectToDatabase",
    "createEvaluatorTrainer",
    "createProjectsMatchIterator"
  ],
  "arrayEqualValues.test": ["arrayEqualValues"],
  "toTensorEqual.test": ["tfjs"],
  "toTensorEqual": ["tfjs", "arrayEqualValues"],
  "accountLink": [
    "stores",
    "free-solid-svg-icons",
    "toolButton.svelte",
    "userStore"
  ],
  "accountPage": ["signInButton.svelte", "userStore"],
  "signInButton": ["environment", "public", "userStore"],
  "userStore": ["user", "store"],
  "audioContextStore": ["store"],
  "isPlayingStore": ["store"],
  "loopStore": ["loop", "store"],
  "mixerStore": ["mixer", "store", "wondrousStore"],
  "notesStore": ["note", "store"],
  "sequencerStore": ["sequencer", "store", "wondrousStore"],
  "shortcutHandler": ["isTargetInput"],
  "shortcutHandlerStore": [
    "navigation",
    "invert",
    "store",
    "editorStore",
    "instrumentsHref",
    "patternsHref",
    "projectIdStore",
    "isPlayingStore",
    "shortcutHandler"
  ],
  "startedAtStore": ["store"],
  "stoppedAtStore": ["store"],
  "timeSourceStore": [
    "store",
    "timeSource",
    "audioContextStore",
    "isPlayingStore",
    "loopStore",
    "startedAtStore",
    "stoppedAtStore"
  ],
  "encodeMp3": ["lamejs", "getIntSamples"],
  "commandItem": ["command"],
  "historyView": ["command", "commandItem.svelte"],
  "createProjectButton": ["blankTrackPreset", "free-solid-svg-icons"],
  "deleteProjectButton": ["project", "free-solid-svg-icons"],
  "deleteProjectModal": ["forms", "project"],
  "projectDotsButton": ["project", "free-solid-svg-icons"],
  "projectItem": ["project", "projectDotsButton.svelte"],
  "projectList": ["project", "projectItem.svelte"],
  "projectMenu": ["project", "menu.svelte"],
  "projectsPage": ["project", "createProjectButton.svelte"],
  "renameProjectButton": ["project", "free-solid-svg-icons"],
  "renameProjectModal": ["forms", "project"],
  "saveTrackButton": [
    "project",
    "createCommand",
    "editor",
    "track",
    "getTrackData",
    "getTrackPreset",
    "free-solid-svg-icons",
    "userStore"
  ],
  "trackDisplay": [
    "patternDuration",
    "track",
    "channelColors",
    "getObjectLength"
  ],
  "trackPresetsLink": ["stores", "free-solid-svg-icons"],
  "focus": ["pattern", "section"],
  "getColorStyle": ["channelColors"],
  "projectIdStore": ["store"],
  "projectStore": ["project", "store"],
  "trackStore": ["track", "store", "editorStore"],
  "arrangeLink": ["toolButton.svelte", "projectIdStore"],
  "arrangePage": [
    "loopStore",
    "notesStore",
    "trackStore",
    "arrangeToolbar.svelte"
  ],
  "arrangePatternItem": ["pattern", "zoomStore"],
  "arrangePatternList": ["trackStore", "arrangePatternItem.svelte"],
  "arrangeRoll": [
    "sequencerStore",
    "clipModeStore",
    "playhead.svelte",
    "sectionPatternList.svelte",
    "zoomStore"
  ],
  "formatTime.test": ["formatTime"],
  "playhead": ["isPlayingStore", "timeSourceStore", "zoomStore"],
  "timeDisplay": [
    "isPlayingStore",
    "timeSourceStore",
    "free-solid-svg-icons",
    "formatTime"
  ],
  "zoomStore": ["store"],
  "addClipButton": ["addClip", "zoomStore", "editorStore"],
  "clipItem": [
    "removeClip",
    "clip",
    "editorStore",
    "zoomStore",
    "clipModeStore",
    "patternMiniDisplay.svelte"
  ],
  "clipModeItem": ["toolButton.svelte", "clipMode", "clipModeStore"],
  "clipModeStore": ["store", "clipMode"],
  "noteItem": ["note"],
  "patternMiniDisplay": [
    "patternDuration",
    "pattern",
    "getColorStyle",
    "roll.svelte"
  ],
  "roll": [
    "note",
    "patternDuration",
    "zoomStore",
    "notInfinity",
    "noteItem.svelte"
  ],
  "loopBar": [
    "patternDuration",
    "loopStore",
    "times",
    "free-solid-svg-icons",
    "trackStore",
    "loopButton.svelte"
  ],
  "loopButton": ["patternDuration", "loopStore", "zoomStore"],
  "loopIndicator": ["loopStore", "free-solid-svg-icons", "zoomStore"],
  "addSectionMenu": ["addSectionOption.svelte", "sectionNatures"],
  "addSectionOption": ["addSection", "newId", "editorStore"],
  "removeSectionButton": [
    "removeSection",
    "section",
    "editorStore",
    "free-solid-svg-icons"
  ],
  "sectionClips": [
    "clip",
    "section",
    "trackStore",
    "addClipButton.svelte",
    "clipItem.svelte",
    "clipModeStore",
    "zoomStore"
  ],
  "sectionDotsButton": ["section", "free-solid-svg-icons"],
  "sectionItem": ["section", "zoomStore", "sectionDotsButton.svelte"],
  "sectionMenu": ["section", "menu.svelte"],
  "sectionPatternList": ["trackStore", "sectionClips.svelte"],
  "sectionsBar": ["trackStore", "sectionItem.svelte"],
  "buttonOrAnchor": ["elements"],
  "byClientCreatedAt": ["commandData"],
  "channelFilterSelect": ["channels"],
  "editorStore": [
    "command",
    "createCommand",
    "editor",
    "getTrackData",
    "same",
    "store",
    "projectStore",
    "byClientCreatedAt"
  ],
  "evaluatorStore": ["evaluator", "store"],
  "levelsStore": ["maxSynths", "store"],
  "loadEvaluator": ["evaluator", "tfjs"],
  "playButton": ["isPlayingStore", "invert", "free-solid-svg-icons"],
  "projectsLink": ["stores", "free-solid-svg-icons"],
  "studioPage": [
    "project",
    "audioContextStore",
    "isPlayingStore",
    "loopStore",
    "mixerStore",
    "notesStore",
    "sequencerStore",
    "shortcutHandlerStore",
    "startedAtStore",
    "stoppedAtStore",
    "studioToolbar.svelte",
    "instrumentStore",
    "pianoStore",
    "trackStore",
    "createWondrousProxy",
    "createWondrousWorkletNode",
    "patternStore",
    "projectIdStore",
    "wondrousStore",
    "wondrousWorkletNodeStore"
  ],
  "tabs": ["stores", "arrangeLink.svelte"],
  "toolButton": ["buttonOrAnchor.svelte", "toolExpandStore", "elements"],
  "toolExpandStore": ["store"],
  "wondrousStore": ["store"],
  "wondrousWorkletNodeStore": ["store"],
  "formatValue.test": ["formatValue"],
  "redoButton": ["editorStore", "free-solid-svg-icons"],
  "undoButton": ["editorStore", "free-solid-svg-icons"],
  "addEffectOption": [
    "addEffect",
    "getEffectDataFromDefaults",
    "editorStore",
    "asTitle"
  ],
  "clamp.test": ["clamp"],
  "controlItem": [
    "updateEffect",
    "effect",
    "asTitle",
    "slider.svelte",
    "editorStore",
    "formatValue",
    "trackStore",
    "withTension",
    "withoutTension"
  ],
  "effectDotsButton": ["effect", "free-solid-svg-icons"],
  "effectItem": [
    "getTicket",
    "effect",
    "mixerStore",
    "asTitle",
    "controlItem.svelte"
  ],
  "effectList": [
    "moveEffect",
    "effect",
    "effectItem.svelte",
    "editorStore",
    "hideDragGhost"
  ],
  "effectMenu": ["effect", "menu.svelte"],
  "effectsGroup": ["effectsParent", "addEffectButton.svelte"],
  "enhanceEffectButton": [
    "effect",
    "enhanceEffect",
    "free-solid-svg-icons",
    "editorStore",
    "evaluatorStore",
    "trackStore"
  ],
  "removeEffectButton": [
    "removeEffect",
    "effect",
    "free-solid-svg-icons",
    "editorStore"
  ],
  "slider": ["clamp"],
  "withoutTension.test": ["withoutTension"],
  "withTension.test": ["withTension"],
  "channelColorDot": ["channelColors"],
  "instrumentBar": ["instrument", "instrumentChannelButton.svelte"],
  "instrumentChannelButton": ["instrument"],
  "instrumentChannelMenu": ["instrument", "channels", "menu.svelte"],
  "instrumentChannelOption": [
    "setChannelOfInstrument",
    "instrument",
    "channelColors",
    "editorStore"
  ],
  "instrumentGraphLink": [
    "instrument",
    "free-solid-svg-icons",
    "projectIdStore"
  ],
  "instrumentItem": ["stores", "instrument", "getColorStyle", "projectIdStore"],
  "instrumentList": [
    "byName",
    "instrumentItem.svelte",
    "trackStore",
    "instrumentPresetsLink.svelte"
  ],
  "instrumentPage": ["instrumentStore", "instrumentView.svelte"],
  "instrumentsHref": [
    "store",
    "mediaStore",
    "projectIdStore",
    "instrumentStore"
  ],
  "instrumentsLink": ["toolButton.svelte", "instrumentsHref"],
  "instrumentStore": ["store", "trackStore"],
  "instrumentView": [
    "instrument",
    "commonGraphEffectClasses",
    "synthGraphEffectClasses",
    "effectsGroup.svelte",
    "getColorStyle",
    "addSoundButton.svelte"
  ],
  "removeInstrumentButton": [
    "removeInstrument",
    "instrument",
    "editorStore",
    "instrumentStore",
    "free-solid-svg-icons"
  ],
  "renameInstrumentInput": ["renameInstrument", "instrument", "editorStore"],
  "saveInstrumentButton": [
    "instrument",
    "getInstrumentPreset",
    "free-solid-svg-icons",
    "userStore"
  ],
  "instrumentGraphPage": [
    "getColorStyle",
    "graphDisplay.svelte",
    "instrumentStore",
    "synthGraphToggleButton.svelte"
  ],
  "generateInstrumentsPresetsLink": [
    "generatePresetsLink.svelte",
    "projectIdStore"
  ],
  "instrumentPresetItem": [
    "navigation",
    "addInstrument",
    "getSingle",
    "editorStore",
    "instrumentPreset",
    "replaceMappingIds",
    "likeButton.svelte",
    "projectIdStore"
  ],
  "instrumentPresetList": ["instrumentPreset", "instrumentPresetItem.svelte"],
  "instrumentPresetsLink": ["stores", "free-solid-svg-icons", "projectIdStore"],
  "generateInstrumentPresetsLink": ["projectIdStore"],
  "generateInstrumentPresetsPage": [
    "header.svelte",
    "instrumentPreset",
    "instrumentPresetList.svelte"
  ],
  "searchInstrumentPresetsLink": ["searchPresetsLink.svelte", "projectIdStore"],
  "searchInstrumentPresetsPage": [
    "header.svelte",
    "instrumentPreset",
    "channelFilterSelect.svelte"
  ],
  "channelList": ["trackStore", "instrumentChannelItem.svelte"],
  "instrumentChannelItem": [
    "setInstrumentVolume",
    "instrument",
    "mixerStore",
    "hashToU32",
    "editorStore",
    "getColorStyle",
    "verticalSlider.svelte"
  ],
  "levelIndicator": ["clamp"],
  "levelIndicators": [
    "levelsStore",
    "trackStore",
    "channelLevelIndicator.svelte"
  ],
  "masterGraphLink": ["projectIdStore"],
  "masterIndex": ["maxSynths"],
  "masterItem": [
    "setMasterVolume",
    "mixerStore",
    "hashToU32",
    "editorStore",
    "projectIdStore",
    "trackStore",
    "verticalSlider.svelte"
  ],
  "masterPage": [
    "commonGraphEffectClasses",
    "masterGraphEffectClasses",
    "effectsGroup.svelte",
    "trackStore",
    "masterGraphLink.svelte"
  ],
  "mixerLayout": ["levelsStore", "wondrousWorkletNodeStore"],
  "mixerLink": ["toolButton.svelte", "projectIdStore"],
  "verticalSlider": ["formatValue", "clamp"],
  "masterGraphPage": ["graphDisplay.svelte", "trackStore"],
  "colorsByChannelHash": ["hashToU32", "channelColors"],
  "controlInput": ["nodeView", "nodeWidth"],
  "createNodeViews": ["nodeView"],
  "edgeItem": ["nodeView", "nodeWidth"],
  "graphDisplay": [
    "graph",
    "nodeItem.svelte",
    "nodeWidth",
    "zoomStore",
    "graphView"
  ],
  "graphView": [
    "graph",
    "createNodeViews",
    "hideRedundancies",
    "nodeView",
    "setNewPosition"
  ],
  "hideRedundancies": ["capitalize", "graphView", "nodeView"],
  "nodeItem": [
    "isSynthOutputNode",
    "controlInput.svelte",
    "inputItem.svelte",
    "nodeView",
    "nodeWidth",
    "colorsByChannelHash"
  ],
  "nodeView": ["isControlNode", "asTitle", "position"],
  "zoomStore": ["store"],
  "setNewPosition": ["graphView", "setNewX", "setNewY"],
  "setNewX": ["nodeView", "nodeWidth"],
  "setNewY": ["nodeView"],
  "mutePatternButton": [
    "setPatternIsMuted",
    "pattern",
    "free-solid-svg-icons",
    "editorStore"
  ],
  "noteItem": ["note", "zoomStore"],
  "patternBar": ["pattern", "patternChannelButton.svelte"],
  "patternChannelButton": ["pattern"],
  "patternChannelMenu": ["pattern", "channels", "menu.svelte"],
  "patternChannelOption": [
    "setChannelOfPattern",
    "pattern",
    "channelColors",
    "editorStore"
  ],
  "patternItem": [
    "stores",
    "pattern",
    "getColorStyle",
    "zoomStore",
    "projectIdStore",
    "mutePatternButton.svelte"
  ],
  "patternLayout": [
    "patternDuration",
    "loopStore",
    "notesStore",
    "patternList.svelte",
    "trackStore"
  ],
  "patternList": ["trackStore", "patternItem.svelte"],
  "patternPage": ["patternStore", "patternView.svelte"],
  "patternRoll": ["pattern", "getColorStyle", "noteItem.svelte", "zoomStore"],
  "patternsDisplay": ["playhead.svelte", "trackStore"],
  "patternsHref": ["store", "mediaStore", "projectIdStore", "patternStore"],
  "patternsLink": ["toolButton.svelte", "patternsHref"],
  "patternStore": ["store", "trackStore"],
  "patternView": [
    "pattern",
    "notesEffectClasses",
    "effectsGroup.svelte",
    "getColorStyle",
    "patternBar.svelte"
  ],
  "removePatternButton": [
    "removePattern",
    "pattern",
    "free-solid-svg-icons",
    "editorStore",
    "patternStore"
  ],
  "renamePatternInput": ["renamePattern", "pattern", "editorStore"],
  "savePatternButton": [
    "pattern",
    "getPatternPreset",
    "free-solid-svg-icons",
    "userStore"
  ],
  "soloPatternButton": [
    "setPatternIsSoloed",
    "pattern",
    "free-solid-svg-icons",
    "editorStore"
  ],
  "zoomStore": ["store"],
  "addPatternButton": ["stores", "free-solid-svg-icons", "projectIdStore"],
  "patternPresetItem": [
    "navigation",
    "addPattern",
    "getSingle",
    "editorStore",
    "patternPreset",
    "replaceMappingIds",
    "likeButton.svelte",
    "projectIdStore",
    "patternPresetPreview.svelte"
  ],
  "patternPresetList": ["patternPreset", "patternPresetItem.svelte"],
  "patternPresetPreview": [
    "getSingle",
    "patternDuration",
    "track",
    "trackData",
    "patternPreset",
    "loop",
    "patternMiniDisplay.svelte",
    "presetPreviewer.svelte",
    "preview",
    "trackStore"
  ],
  "patternPresetsLink": ["searchPresetsLink.svelte", "projectIdStore"],
  "patternPresetsPage": [
    "stores",
    "header.svelte",
    "patternPreset",
    "channelFilterSelect.svelte",
    "generatePatternPresetsLink.svelte",
    "getHasSomeFilter",
    "patternPresetList.svelte"
  ],
  "generatePatternPresetsLink": [
    "generatePresetsLink.svelte",
    "projectIdStore"
  ],
  "generatePatternPresetsPage": [
    "header.svelte",
    "patternPreset",
    "patternPresetList.svelte"
  ],
  "channelOctaves": ["channels"],
  "key": ["pianoStore"],
  "piano": [
    "newId",
    "note",
    "timeSource",
    "chromaticOctave",
    "isTargetInput",
    "channelOctaves",
    "pianoKeys"
  ],
  "pianoDisplay": ["key.svelte", "pianoKeys"],
  "pianoStore": [
    "audioContextStore",
    "mixerStore",
    "timeSource",
    "store",
    "piano"
  ],
  "isLikedRecordStore": ["store"],
  "likeButton": ["preset", "free-solid-svg-icons", "isLikedRecordStore"],
  "playTrack": [
    "track",
    "createWondrousProxy",
    "createWondrousWorkletNode",
    "loop",
    "mixer",
    "sequencer"
  ],
  "presetPreviewer": [
    "stream",
    "newId",
    "preset",
    "userStore",
    "minStreamDuration",
    "preview",
    "previewPlayhead.svelte"
  ],
  "preview": ["track", "loop", "playTrack"],
  "previewPlayhead": ["preview"],
  "addSoundMenu": ["soundEffectClasses", "menu.svelte"],
  "addSoundOption": [
    "executeCommands",
    "addEffect",
    "addSound",
    "newId",
    "getEffectDataFromDefaults",
    "editorStore",
    "asTitle"
  ],
  "enhanceSoundButton": [
    "sound",
    "enhanceSound",
    "free-solid-svg-icons",
    "editorStore",
    "evaluatorStore",
    "trackStore"
  ],
  "getSoundKind": ["sound", "soundEffectClasses"],
  "removeSoundButton": [
    "removeSound",
    "sound",
    "free-solid-svg-icons",
    "editorStore"
  ],
  "soundItem": [
    "sound",
    "toneGraphEffectClasses",
    "asTitle",
    "effectsGroup.svelte",
    "enhanceSoundButton.svelte",
    "getSoundKind",
    "removeSoundButton.svelte"
  ],
  "soundList": ["sound", "free-solid-svg-icons"],
  "trackPresetItem": ["trackPreset", "likeButton.svelte"],
  "trackPresetList": ["trackPreset", "trackPresetItem.svelte"],
  "trackPresetPreview": [
    "track",
    "trackDisplay.svelte",
    "getTrackData",
    "trackPreset",
    "loop",
    "presetPreviewer.svelte",
    "preview"
  ],
  "trackPresetsPage": [
    "heading.svelte",
    "trackPreset",
    "trackPresetList.svelte"
  ],
  "generateTrackPresetsLink": ["stores", "toolButton.svelte"],
  "generateTrackPresetsPage": [
    "heading.svelte",
    "trackPreset",
    "trackPresetList.svelte"
  ],
  "generateName": ["namingOptions"],
  "loFiNaming": ["naming"],
  "namingOptions": ["loFiNaming", "phonkNaming"],
  "phonkNaming": ["naming"],
  "instrumentPreset": ["instrumentMapping", "preset"],
  "patternPreset": ["patternMapping", "preset"],
  "trackPreset": ["trackMapping", "preset"],
  "getEffectData": ["effectData", "effect"],
  "getInstrumentMapping": [
    "instrument",
    "instrumentMapping",
    "getEffectData",
    "getSoundMapping"
  ],
  "getPatternMapping": ["pattern", "patternMapping", "getEffectData"],
  "getSoundMapping": ["sound", "effectData", "soundMapping", "getEffectData"],
  "getTrackData": ["getItemsById", "getSingle", "trackMapping", "trackData"],
  "getTrackMapping": ["track", "trackMapping"],
  "getInstrumentPreset": [
    "newId",
    "instrument",
    "instrumentPreset",
    "getInstrumentMapping"
  ],
  "getPatternPreset": [
    "newId",
    "pattern",
    "getPatternMapping",
    "patternPreset"
  ],
  "getTrackPreset": ["newId", "track", "getTrackMapping", "trackPreset"],
  "replaceId.test": ["mockNewId", "idChanges", "replaceId"],
  "replaceId": ["newId", "idChanges"],
  "replaceIds.test": ["mockNewId", "replaceIds"],
  "replaceIds": ["idChanges", "replaceId"],
  "replaceItemId.test": ["mockNewId", "idChanges", "replaceItemId"],
  "replaceItemId": ["newId", "idChanges"],
  "replaceItemIds.test": ["replaceItemIds"],
  "replaceItemIds": ["idChanges", "replaceItemId"],
  "replaceMappingIds.test": [
    "mapping",
    "effectData",
    "instrumentData",
    "patternData",
    "sectionData",
    "soundData",
    "mockNewId",
    "replaceMappingIds"
  ],
  "replaceMappingIds": [
    "mapping",
    "idChanges",
    "replaceId",
    "replaceIds",
    "replaceItemIds"
  ],
  "chromaticMiddleC": ["chromaticOctave", "chromaticPitches"],
  "chromaticToDiatonic.test": [
    "chromaticOctave",
    "chromaticPitches",
    "chromaticToDiatonic",
    "diatonicOctave"
  ],
  "chromaticToDiatonic": [
    "chromaticOctave",
    "diatonicOctave",
    "diatonicPitches",
    "positiveModulo"
  ],
  "diatonicToChromatic.test": [
    "chromaticOctave",
    "chromaticPitches",
    "diatonicOctave",
    "diatonicPitches",
    "diatonicToChromatic"
  ],
  "diatonicToChromatic": [
    "chromaticOctave",
    "chromaticPitches",
    "diatonicOctave",
    "positiveModulo"
  ],
  "positiveModulo.test": ["positiveModulo"],
  "blankEnsemble": ["ensembleData"],
  "blankMasterData": ["masterData"],
  "blankProject": ["project", "blankTrackPreset"],
  "blankTrackData": ["trackData", "blankEnsemble", "blankMasterData"],
  "blankTrackPreset": [
    "track",
    "getTrackMapping",
    "trackPreset",
    "blankTrackData"
  ],
  "isDefined.test": ["isDefined"],
  "mockMathRandom.test": ["mockMathRandom", "mockMathRandomTester"],
  "mockMathRandomTester": ["times"],
  "mockNewId.test": ["mockNewId", "mockNewIdTester"],
  "mockNewIdTester": ["newId", "times"],
  "times.test": ["times"],
  "createWondrousProxy.test": ["createWondrousProxy"],
  "createWondrousWorkletNode": ["wasmBytesSingleton"],
  "getFrame": ["sampleRate"],
  "getNoteDto": ["note", "hashToU32"],
  "hashToU32.test": ["hashToU32"],
  "master": [
    "getTreeNodes",
    "graph",
    "replaceNodeUsage",
    "instrument",
    "sumNodes",
    "masterData",
    "getEffects",
    "effect",
    "masterGraphStage",
    "hashToU32",
    "side"
  ],
  "mixer": ["instrument", "note", "getNoteDto", "hashToU32", "master"],
  "ringBuffer.test": ["ringBuffer"],
  "sequencer": ["note", "getFrame", "getNoteDto", "loop"],
  "+layout.server": [
    "getLikedIds",
    "createGuestUser.js",
    "getUserByToken.js",
    "setAuthorizationCookie",
    "user"
  ],
  "+layout.svelte": ["userStore", "isLikedRecordStore"],
  "+page": ["kit"],
  "+page.server": ["kit"],
  "+server": ["setAuthorizationCookie.js", "signIn", "kit"],
  "+server": ["addCommand", "commandData", "kit"],
  "+server": ["savePreset", "getUserId.js"],
  "+server": ["addStream", "stream", "getUserId.js", "kit"],
  "+page.server": [
    "createProject",
    "deleteProject",
    "getUserProjects",
    "project",
    "renameProject",
    "getUserId",
    "kit"
  ],
  "+error.svelte": ["stores", "projectNotFoundPage.svelte"],
  "+page": ["kit"],
  "+layout.server": ["getProject", "kit"],
  "+layout": ["studioPage.svelte", "projectStore", "$types"],
  "+page": ["kit"],
  "+page": ["stores", "instrumentPage.svelte", "instrumentStore"],
  "+page": ["stores", "instrumentGraphPage.svelte", "instrumentStore"],
  "+page.server": ["generateInstrumentPresets"],
  "+page": ["stores", "patternPage.svelte", "patternStore"],
  "+page.server": ["generatePatternPresets"],
  "+page.server": ["generateTrackPresets"]
}
